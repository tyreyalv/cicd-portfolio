# argo-cd/application.yaml
# This manifest defines the Argo CD Application for the GitOps workflow.

apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  # The name of the application in the Argo CD UI.
  name: hello-app-prod
  # This application resource must be created in the 'argocd' namespace.
  namespace: argo
spec:
  # The Argo CD project this application belongs to.
  project: hello-app-project

  # Source defines the location of the application's configuration.
  source:
    # The URL of your GitHub repository.
    repoURL: 'https://github.com/tyreyalv/cicd-portfolio.git'
    # The branch to track for changes.
    targetRevision: main
    # The path within the repo where the Helm chart is located.
    path: helm

    # Helm configuration
    helm:
      # Use the values.yaml file in the chart directory
      valueFiles:
        - values.yaml
      # Optional: Override specific values (can also be done via valueFiles)
      # values: |
      #   image:
      #     tag: "latest"
      
      # Optional: Release name override (defaults to app name)
      releaseName: hello-app
      
      # Optional: Helm parameters (alternative to values)
      # parameters:
      #   - name: "image.tag"
      #     value: "v1.32"

  # Destination defines where the application will be deployed.
  destination:
    # The target cluster URL. 'https://kubernetes.default.svc' means the same cluster where Argo CD is running.
    server: 'https://kubernetes.default.svc'
    # The namespace to deploy the application's resources into.
    # This should match the namespace in your helm/values.yaml or be set via Release.Namespace
    namespace: 'hello-app'

  # SyncPolicy defines how Argo CD synchronizes the application state.
  syncPolicy:
    automated:
      # Automatically prune resources that are no longer defined in Git.
      prune: true
      # Automatically sync the application when it is out of sync with Git.
      selfHeal: true
    # Sync options for Helm deployments
    syncOptions:
      # Automatically create the destination namespace if it doesn't exist.
      - CreateNamespace=true
      # Apply out-of-sync resources during automated sync
      - ApplyOutOfSyncOnly=true
      # Respect ignore differences for certain fields
      - RespectIgnoreDifferences=true
      # Optional: Prune last to avoid dependency issues
      - PruneLast=true
    
    # Optional: Retry configuration for failed syncs
    retry:
      limit: 5
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 3m